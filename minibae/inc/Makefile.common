BUILD_DIR	:= build/
TEST_OUT_DIR	:= tests/
TARGET_OUT	:= bin/
BAE_FLAGS	:=

# Begin Allow Overrides
ifeq ($(TARGET_LIB),)
	TARGET_LIB	:= libminiBAE
endif

ifeq ($(TARGET_BIN),)
	TARGET_BIN	:= playbae
endif

ifeq ($(TEST_BIN_PREFIX),)
	TEST_BIN	:= $(TARGET_OUT)$(TARGET_BIN)
else
	TEST_BIN	:= $(TEST_BIN_PREFIX)$(TARGET_OUT)$(TARGET_BIN)
endif
# End Allow Overrides

vpath	%.c src/BAE_Source/Common src/BAE_Source/Platform
vpath	%.c src/banks/patches111
vpath	%.c src/playbae
vpath	%.c src/BAE_MPEG_Source_II

INC_PATH	:= -Isrc/BAE_Source/Common
INC_PATH	+= -Isrc/BAE_Source/Platform
INC_PATH	+= -Isrc/BAE_MPEG_Source_II
INC_PATH	+= -Isrc/banks/patches111

### Start configure BAE API

# default to ANSI
ifeq ($(BAE_API),)
	BAE_API		:= Ansi
endif

## Begin Easy API -> X_PLATFORM
# Supported APIs
ifeq ($(BAE_API),Ansi)
	BAE_FLAGS += 	-DX_PLATFORM=X_ANSI
	SRC       :=	BAE_API_$(BAE_API).c
endif
ifeq ($(BAE_API),WinOS)
	BAE_FLAGS += 	-DX_PLATFORM=X_WIN95
	SRC       :=	BAE_API_$(BAE_API).c \
			BAE_API_$(BAE_API)_Capture.c \
			BAE_API_$(BAE_API)_Thread.c
endif

# zefie has not tested these APIs
ifeq ($(BAE_API),MacOSX)
	BAE_FLAGS += 	-DX_PLATFORM=X_MACINTOSH
	SRC       :=	BAE_API_$(BAE_API).c
endif
ifeq ($(BAE_API),Android)
	BAE_FLAGS += 	-DX_PLATFORM=X_ANDROID
	SRC       :=	BAE_API_$(BAE_API).c
endif
ifeq ($(BAE_API),IOS)
	BAE_FLAGS += 	-DX_PLATFORM=X_IOS
	SRC       :=	BAE_API_$(BAE_API).c
endif
## End Easy API -> X_PLATFORM
### End configure BAE API


# Compile built-in patches by default
ifeq ($(BAE_BUILT_IN_PATCHES),)
	BAE_BUILT_IN_PATCHES	:= 1
endif

# Debug
ifneq (${DEBUG},0)
        BAE_FLAGS +=    -D_DEBUG=1
endif


# Primary libMiniBAE sources
SRC		+=	DriverTools.c \
			GenAudioStreams.c \
			GenCache.c \
			GenChorus.c \
			GenFiltersReverbU3232.c \
			GenInterp2ReverbU3232.c \
			GenOutput.c \
			GenPatch.c \
			GenReverb.c \
			GenReverbNew.c \
			GenSample.c \
			GenSeq.c \
			GenSeqTools.c \
			GenSetup.c \
			GenSong.c \
			GenSoundFiles.c \
			GenSynth.c \
			GenSynthFiltersSimple.c \
			GenSynthFiltersU3232.c \
			GenSynthInterp2Simple.c \
			GenSynthInterp2U3232.c \
			MiniBAE.c \
			NewNewLZSS.c \
			SampleTools.c \
			X_API.c \
			X_Decompress.c \
			X_IMA.c \
			g711.c \
			g721.c \
			g723_24.c \
			g723_40.c \
			g72x.c

# Compile in patches if desired
ifeq ($(BAE_BUILT_IN_PATCHES),1)
	SRC +=		BAEPatches.c
	BAE_FLAGS += 	-D_BUILT_IN_PATCHES=1
endif

### Maybe one day....
#SRC		+= 	\
#			XMPEGFilesSun.c \
#			XMPEG_BAE_API.c \
#			mpa_c_copybytes.c \
#			mpa_conv.c \
#			mpa_dec.c \
#			mpa_dec_bits.c \
#			mpa_dec_crc.c \
#			mpa_dec_l1.c \
#			mpa_dec_l12.c \
#			mpa_dec_l2.c \
#			mpa_dec_l3.c \
#			mpa_dec_l3hf.c \
#			mpa_dec_l3u.c \
#			mpa_dec_poly.c \
#			mpa_dec_tab.c \
#			mpa_dec_vec.c \
#			mpa_version.c

# playbae = libMiniBAE srcs + playbae.c
SRC_BIN		:= $(SRC) playbae.c

OBJ_DIR 	:= $(BUILD_DIR)obj/
OBJ 		:= $(addprefix $(OBJ_DIR),$(addsuffix .o,$(basename ${SRC})))
OBJ_BIN 	:= $(addprefix $(OBJ_DIR),$(addsuffix .o,$(basename ${SRC_BIN})))

#### End Makefile.common
